---
/* Component for rendering social media platform icons.
 *
 * Props:
 * - platform: string - Social platform name
 * - url: string - Profile/contact URL
 * - userName?: string - Optional username
 * - size?: number - Icon size in pixels
 * - fill?: boolean - Use filled icon style
 * - iconPrefix?: string - Icon set prefix
 * - class?: string - Additional CSS classes
 *
 * Example usage:
 * <SocialIcon
 *   platform="github"
 *   url="https://github.com/user"
 *   userName="GithubUser"
 *   size={24}
 * />
 *
 * Notes:
 * - Automatic icon mapping
 * - Email link support
 * - Filled/outline variants
 * - Theme-based colors
 * - Accessible links
 */

import { Icon } from "astro-icon/components";

interface Props {
	platform: string;
	url: string;
	userName?: string;
	size?: number;
	fill?: boolean;
	iconPrefix?: string; //  i.e. "ri"
	class?: string |  undefined;
}

const {
	platform,
	url,
	userName,
	size = 24,
	fill = false,
	iconPrefix = "ri",
	class: className,
} = Astro.props;

function buildIconName(platform: string, fill: boolean, iconPrefix: string) {
	const iconName = () => {
		switch (platform) {
			case "web":
				return "globe";
			case "email":
				return "mail-open";
			case "twitter":
				return "twitter";
			default:
				return platform;
		}
	};

	const iconModifier = fill ? "fill" : "line";

	return `${iconPrefix}:${iconName()}-${iconModifier}`;
}

const iconName = buildIconName(platform, fill, iconPrefix);
---

<a
	href={platform === "email" ? `mailto:${url}` : url}
	target="_blank"
	class="hover:text-theme-accent no-underline m-0 p-0"
>
	<Icon
		name={iconName}
		size={size}
		title={userName || platform}
		class:list={["mt-1 mr-2", { className }]}
	/>
</a>
