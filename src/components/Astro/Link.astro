---
/* Component for rendering accessible links with external link handling.
 *
 * Props:
 * - href: string - URL for the link destination
 * - text: string - Text content of the link
 * - external?: boolean - Whether link points to external resource
 * - hideIcon?: boolean - Whether to hide external link icon
 * - rel?: string - Optional rel attribute value
 * - class?: string - Additional CSS classes
 *
 * Example usage:
 * <Link
 *   href="https://example.com"
 *   text="External Site"
 *   external={true}
 *   class="text-blue-500"
 * />
 *
 * Notes:
 * - Automatically handles external link attributes
 * - Includes accessible icon for external links
 * - Screen reader support for external indication
 * - Configurable rel attribute for security
 * - Supports custom styling
 */

interface Props {
	// URL for the link destination //
	href: string;
	// Text content of the link //
	text: string;
	// Whether the link points to an external resource //
	external?: boolean;
	// Whether to hide the external link icon //
	hideIcon?: boolean;
	// Optional rel attribute value //
	rel?: string;
	// Optional CSS classes //
	class?: string | undefined;
}

const {
	href,
	text,
	external = false,
	hideIcon = false,
	class: className,
	rel: propRel,
} = Astro.props;

const rel = external ? `noopener noreferrer ${propRel || ""}`.trim() : propRel;
---

<a
	href={href}
	target={external ? "_blank" : undefined}
	rel={rel}
	class:list={['inline-block', className]}
>
	{text}
	{
		external && !hideIcon && (
			<>
				<span class="sr-only">(opens in a new tab)</span>
				<svg
					aria-hidden="true"
					xmlns="http://www.w3.org/2000/svg"
					width="1em"
					height="1em"
					viewBox="0 0 24 24"
					fill="none"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
					class="inline-block ml-1"
				>
					<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
					<polyline points="15 3 21 3 21 9" />
					<line x1="10" y1="14" x2="21" y2="3" />
				</svg>
			</>
		)
	}
</a>
