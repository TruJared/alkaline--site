---
import type { ImageMetadata } from "astro";
import PatternBackground from "@components/Astro/utils/PatternBackground.astro";
import Image from "astro/components/Image.astro";

/* Component for rendering page headers with optional image and background pattern.
 *
 * Props:
 * - heading: string - Main heading text
 * - description?: string - Optional subheading text
 * - image?: ImageMetadata - Optional image to display
 * - imageAlt?: string - Alt text for the image
 * - animate?: boolean - Controls image animation (default: true)
 * - backgroundPattern?: string - Pattern name for background
 * - patternOpacity?: number - Pattern opacity (0-1)
 * - class?: string - Additional CSS classes
 *
 * Example usage:
 * <PageHeader
 *   heading="Welcome"
 *   description="Learn more about our services"
 *   image={import("@assets/header.jpg")}
 *   imageAlt="Team at work"
 *   backgroundPattern="dots"
 * />
 *
 * Notes:
 * - Supports responsive layouts
 * - Optional animated image display
 * - Configurable background patterns
 * - Accessible image handling
 * - Theme-based styling
 */

interface Props {
	// Main heading text //
	heading: string;
	// Optional subheading or description text //
	description?: string;
	// Optional image to display //
	image?: ImageMetadata;
	// Alt text for the image //
	imageAlt?: string;
	// Controls image animation (default: true) //
	animate?: boolean;
	// Pattern name for background decoration //
	backgroundPattern?: string;
	// Opacity value for background pattern (0-1) //
	patternOpacity?: number;
	// Optional CSS classes //
	class?: string | undefined;
}

const {
	heading,
	description,
	image,
	imageAlt,
	animate = true,
	backgroundPattern,
	patternOpacity,
	class: className,
} = Astro.props;
---

<div
	class:list={[
		"relative flex flex-col items-center justify-between w-full p-4 lg:-mt-16 lg:flex-row lg:p-24",
		className,
	]}
>
	{
		backgroundPattern && (
			<PatternBackground
				pattern={backgroundPattern}
				patternOpacity={patternOpacity}
				animate={animate}
			/>
		)
	}
	<div
		class:list={[
			"flex flex-col items-start justify-center lg:w-1/2 mb-8 lg:mb-0",
			{ "lg:w-full lg:mb-12": !image },
		]}
	>
		<h2
			class:list={[
				"font-display text-6xl font-medium tracking-wide [text-wrap:balance] lg:text-7xl",
				{ "build-in": animate },
			]}
		>
			{heading}
		</h2>
		<p
			class:list={[
				"mt-4 text-xl leading-relaxed tracking-wide text-theme-primary lg:text-2xl 2xl:leading-loose",
				{ "build-in": animate },
			]}
		>
			{description}
		</p>
	</div>

	{
		image && (
			<div class="m-0 lg:w-5/12">
				<div class="relative overflow-hidden rounded-full aspect-square max-w-sm md:max-w-lg m-0 p-0">
					<Image
						src={image}
						alt={imageAlt ?? "Image"}
						class:list={[
							"w-full h-full object-cover",
							{ "spin-and-grow": animate },
							{ "rounded-theme": true },
						]}
						width={500}
						height={500}
						loading="eager"
					/>
				</div>
			</div>
		)
	}
</div>

<style>
	h2.build-in {
		animation-delay: 0.2s;
	}

	p.build-in {
		animation-delay: 0.4s;
	}
</style>
