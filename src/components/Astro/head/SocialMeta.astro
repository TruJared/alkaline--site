---
/* Component for generating comprehensive social media and SEO meta tags.
 * Supports OpenGraph, Twitter Cards, and JSON-LD structured data.
 *
 * Props:
 * - title: string - Page title
 * - description: string - Page description
 * - type: "website" | "article" | "profile" | "book" | "product" - Content type
 * - image: string - Social share image URL
 * - canonicalURL: string - Canonical URL for SEO
 * - platform: string - Platform/site name
 * - locale: string - Content locale (default: "en_US")
 * - author: string - Content author
 * - publishedTime: string - Content publish date
 * - modifiedTime: string - Content last modified date
 * - keywords: string[] - SEO keywords
 * - section: string - Content section
 * - twitterCardType: "summary_large_image" | "summary" - Twitter card style
 *
 * Example usage:
 * <SocialMeta
 *   title="My Page Title"
 *   description="Page description for social sharing"
 *   type="article"
 *   image="/social-share.jpg"
 *   author="John Doe"
 *   publishedTime="2024-03-20"
 *   platform="My Website"
 * />
 *
 * Notes:
 * - Automatically generates appropriate JSON-LD based on content type
 * - Supports article, product, and website schemas
 * - Ensures all image URLs are absolute
 * - Handles both Twitter and OpenGraph meta tags
 * - Provides SEO-friendly canonical URLs
 * - Includes structured data for better search results
 */

import Favicon from "@components/Astro/head/Favicon.astro";

interface Props {
	title?: string;
	description?: string;
	type?: "website" | "article" | "profile" | "book" | "product";
	ogImage?: string;
	canonicalURL?: string;
	platform?: string;
	locale?: string;
	logoSrc?: string;
	faviconSrc?: string;
	author?: string;
	publishedTime?: string;
	modifiedTime?: string;
	keywords?: string[];
	section?: string;
	twitterCardType?: "summary_large_image" | "summary";
}

const {
	title,
	description,
	type = "website",
	ogImage,
	canonicalURL = Astro.url.href,
	platform,
	locale = "en_US",
	author,
	logoSrc,
	faviconSrc,
	publishedTime,
	modifiedTime,
	keywords,
	section,
	twitterCardType = "summary_large_image",
} = Astro.props;

// TODO: review the images on this page... Seems not correct.

// Ensure image is a full URL
const imageUrl = new URL(ogImage ?? "", Astro.site);

// JSON-LD Data
let jsonLdData;

switch (type) {
	case "article":
		jsonLdData = {
			"@context": "https://schema.org",
			"@type": "Article",
			headline: title,
			image: imageUrl.href,
			author: {
				"@type": "Person",
				name: author,
			},
			publisher: {
				"@type": "Organization",
				name: platform,
				...(logoSrc && {
					logo: {
						"@type": "ImageObject",
						url: new URL(logoSrc, Astro.site),
					},
				}),
			},
			datePublished: publishedTime,
			dateModified: modifiedTime || publishedTime,
			description: description,
			mainEntityOfPage: {
				"@type": "WebPage",
				"@id": canonicalURL,
			},
		};
		break;
	case "product":
		jsonLdData = {
			"@context": "https://schema.org",
			"@type": "Product",
			name: title,
			image: imageUrl.href,
			description: description,
			// Add more product-specific properties here if needed
		};
		break;
	default:
		jsonLdData = {
			"@context": "https://schema.org",
			"@type": "WebPage",
			name: title,
			description: description,
			url: canonicalURL,
		};
}
// Remove undefined properties
Object.entries(jsonLdData).forEach(([key, value]) => {
	if (value === undefined) {
		delete jsonLdData[key as keyof typeof jsonLdData];
	}
});
---

<title>{title}</title>
<meta charset="utf-8" />

<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />
<link rel="sitemap" href="/sitemap-index.xml" />
<Favicon url={faviconSrc} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageUrl} />
<meta property="og:image:alt" content={title} />
<meta property="og:site_name" content={platform} />
<meta property="og:locale" content={locale} />
{
	publishedTime && (
		<meta property="article:published_time" content={publishedTime} />
	)
}
{
	modifiedTime && (
		<meta property="article:modified_time" content={modifiedTime} />
	)
}
{
	keywords &&
		keywords.map((tag) => <meta property="article:tag" content={tag} />)
}
{section && <meta property="article:section" content={section} />}

<!-- Twitter -->
<meta name="twitter:card" content={twitterCardType} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={imageUrl} />
<meta name="twitter:image:alt" content={title} />

<!-- JSON-LD -->
<script
	is:inline
	type="application/ld+json"
	set:html={JSON.stringify(jsonLdData)}
/>
